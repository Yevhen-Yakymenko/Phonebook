Routes ===>>>

Layout => "/"
  HomePage => index Route to "/"
  Contacts => "/contacts"
  Calendar => "/calendar"
  Notes => "/notes"
  LogInPage => "/login"
  SignUpPage => "/signup"

Components ===>>>

-Layout > AppBar > Logo+NavList+(AuthNavList or UserMenu)
  -AppBar
    -Logo > styled text
    -MainNavList > NavLink > home+contacts+calendar+notes
    -AuthNavList > NavLink > signup+login
    -UserMenu > avatar+userName+btnLogOut



1. add NavList and UserMenu components
2. add Layout component
3. add to Layout NavList, UserMenu and Logo
4. add SingUpPage > SingUpForm
5. add LogInPage > LogInForm
6. add ContactsPage > Filter+addContactBtn+ContactList

1. login + sign up
2. styled appBar
3. modal for addConatact + edit contact


{
  "compilerOptions": {
    "module": "commonjs",
    "target": "es2016",
    "baseUrl": "src",
    "checkJs": true,
    "jsx": "preserve"
  },
  "include": ["src"]
}

переписати header:  навігацію вкласти в ul, і всі списки у nav
<header>
  <nav>
    <Logo/>
    <MainNavList/>
    <AuthNavList/>
  </nav>
  <UserMenu/>
</header>

Logo = > {
  <a>
    <>
      <span>Phone</span>
      <Icon/>
      <span>book</span>
    </>     
  </a>
}

MainNavList => {
  <ul>
    <li>
      <a>Home</a>    
    </li>
    <li>
      <a>Contacts</a>    
    </li>  
  </ul>
}

AuthNavList => {
  <ul>
    <li>
      <a>Log In</a>    
    </li>
    <li>
      <a>Sign Up</a>    
    </li>  
  </ul>
}

Для двох елементів? щоб не використовувати багато розмітки,
можна використовувати div в якості обгортки для стилізації елементів.
Тобто:

AuthNavList => {
  <div>
    <a>Log In</a> 
    <a>Sign Up</a> 
  </div>
}

Для доступності використовують атрибут для будь якого тега 
aria-label=''.
aria-label = 'Button log out' => використовується для підпису 
кнопок-іконок. Дуже важливо його використовувати!!!
aria-expended також використовується для доступності. значення 
true або false. вказує, чи відкрите меню. (як приклад, використовують 
для бургер меню)
aria-controls = 'idname' - поєднує кнопку з бломо для доспупності. 
Вказує яким саме блоком управляє дана кнопка. Блоку задаєть id='idname'.

При роботі з модальни вікном, якщо контент виходить за екран, для
прокручування контенту(скролу) ми бекдропу(сірий фон модалки)
задаємо overflow-y: scroll;
При цьому для на тег body під час відкритого модального вікна
задаємо overflow: hidden;

Додати на лінки :focus

Додати на всі сторінки заголовок та скрити його.
Наприклад, для сторінки LogInPage заголовок <h1>Login page</h1>.

Кнопри робимо за допомогою падінгів. Якщо треба однакової ширини, 
задаємо її ща допомогою min-width.

display: inline-block; - строчно-блочний елемент
тоді на нього працює
text-align: center;


При роботі з фоновими зображеннями завжи під картинкою 
повинен бути background-color близький до відтінку картинки
на випадок не завантаження картинки.
Також за допомогою background та linear-gradient з rbga 
робиться overlay.
В цьому випадку задається декілька background: color1, img1, color2.

Також overlay мщжна зробити за допомогою псевдо класів.

Додати в тему змінну для анімації.

Стилізувати outline.

Подивитись наступнні css влачтивості:
  visibility: hidden;
  pointer-events: none;


loadinh='lazy' для зображень

зробити спінер

зробити іконку для вкладки сторінки favicon.ico

-обірвати запит якщо переходиш на іншу сторінку.
-сторінка 404
-блок завантаження